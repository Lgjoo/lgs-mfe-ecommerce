# Dockerfile para Simple Deploy - Estratégia COM Downtime
# Foco: Simplicidade e velocidade de build

FROM node:22-alpine AS builder

# Definir variáveis de ambiente para build
ENV NODE_ENV=production
ENV NPM_CONFIG_PRODUCTION=false

WORKDIR /app

# Copiar arquivos de dependências primeiro (para cache)
COPY package*.json ./
RUN npm ci --only=production

# Copiar código fonte
COPY . .

# Build da aplicação
RUN npm run build

# Imagem de produção
FROM nginx:alpine

# Instalar curl para health checks
RUN apk add --no-cache curl

# Copiar arquivos buildados
COPY --from=builder /app/dist/lgs-mfe-container /usr/share/nginx/html

# Configuração do Nginx
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/conf.d/default.conf.template

# Script de inicialização
COPY start.sh /start.sh
RUN chmod +x /start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Expor porta
EXPOSE 4200

# Comando de inicialização
CMD ["/start.sh"]


