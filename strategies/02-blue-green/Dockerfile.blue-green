# Dockerfile para Blue-Green Deployment - Estratégia SEM Downtime
# Foco: Zero downtime e rollback rápido

FROM node:22-alpine AS builder

# Definir variáveis de ambiente para build
ENV NODE_ENV=production
ENV NPM_CONFIG_PRODUCTION=false

WORKDIR /app

# Copiar arquivos de dependências primeiro (para cache)
COPY package*.json ./
RUN npm ci --only=production

# Copiar código fonte
COPY . .

# Build da aplicação
RUN npm run build

# Imagem de produção
FROM nginx:alpine

# Instalar ferramentas necessárias
RUN apk add --no-cache curl jq

# Copiar arquivos buildados
COPY --from=builder /app/dist/lgs-mfe-container /usr/share/nginx/html

# Configuração do Nginx com suporte a Blue-Green
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/conf.d/default.conf.template

# Scripts de Blue-Green
COPY start.sh /start.sh
COPY health-check.sh /health-check.sh
COPY switch-traffic.sh /switch-traffic.sh

RUN chmod +x /start.sh /health-check.sh /switch-traffic.sh

# Health check mais rigoroso para Blue-Green
HEALTHCHECK --interval=15s --timeout=5s --start-period=30s --retries=5 \
    CMD /health-check.sh

# Expor porta
EXPOSE 4200

# Comando de inicialização
CMD ["/start.sh"]


