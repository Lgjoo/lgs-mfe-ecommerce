# Dockerfile para Rolling Updates - Estratégia SEM Downtime
# Foco: Atualizações incrementais com múltiplas réplicas

FROM node:22-alpine AS builder

# Definir variáveis de ambiente para build
ENV NODE_ENV=production
ENV NPM_CONFIG_PRODUCTION=false

WORKDIR /app

# Copiar arquivos de dependências primeiro (para cache)
COPY package*.json ./
RUN npm ci --only=production

# Copiar código fonte
COPY . .

# Build da aplicação
RUN npm run build

# Imagem de produção
FROM nginx:alpine

# Instalar ferramentas necessárias para Rolling Updates
RUN apk add --no-cache curl jq

# Copiar arquivos buildados
COPY --from=builder /app/dist/lgs-mfe-container /usr/share/nginx/html

# Configuração do Nginx com suporte a Rolling Updates
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/conf.d/default.conf.template

# Scripts de Rolling Updates
COPY start.sh /start.sh
COPY rolling-monitor.sh /rolling-monitor.sh
COPY graceful-shutdown.sh /graceful-shutdown.sh

RUN chmod +x /start.sh /rolling-monitor.sh /graceful-shutdown.sh

# Health check para Rolling Updates
HEALTHCHECK --interval=20s --timeout=8s --start-period=35s --retries=4 \
    CMD /rolling-monitor.sh

# Expor porta
EXPOSE 4200

# Comando de inicialização
CMD ["/start.sh"]


