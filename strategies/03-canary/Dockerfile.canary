# Dockerfile para Canary Deployment - Estratégia SEM Downtime
# Foco: Deploy gradual com monitoramento avançado

FROM node:22-alpine AS builder

# Definir variáveis de ambiente para build
ENV NODE_ENV=production
ENV NPM_CONFIG_PRODUCTION=false

WORKDIR /app

# Copiar arquivos de dependências primeiro (para cache)
COPY package*.json ./
RUN npm ci --only=production

# Copiar código fonte
COPY . .

# Build da aplicação
RUN npm run build

# Imagem de produção
FROM nginx:alpine

# Instalar ferramentas necessárias para Canary
RUN apk add --no-cache curl jq bc

# Copiar arquivos buildados
COPY --from=builder /app/dist/lgs-mfe-container /usr/share/nginx/html

# Configuração do Nginx com suporte a Canary
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/conf.d/default.conf.template

# Scripts de Canary
COPY start.sh /start.sh
COPY canary-monitor.sh /canary-monitor.sh
COPY traffic-splitter.sh /traffic-splitter.sh
COPY metrics-collector.sh /metrics-collector.sh

RUN chmod +x /start.sh /canary-monitor.sh /traffic-splitter.sh /metrics-collector.sh

# Health check para Canary (mais frequente)
HEALTHCHECK --interval=10s --timeout=3s --start-period=20s --retries=3 \
    CMD /canary-monitor.sh

# Expor porta
EXPOSE 4200

# Comando de inicialização
CMD ["/start.sh"]


